---------------------------------------------------------------------------------
--This is the beginning of a new search with new data pulled into SQLiteStudios--
---------------------------------------------------------------------------------
--                           Chinook Data Analytics                            --
---------------------------------------------------------------------------------

--#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
--SELECT As you can see from the SELECT you are seaching FirstName, LastName, CustomerId, Country. 
--FROM is showing the data base along with customers each is distinguished with a "." between them to show the data base and then the folder you are searching. 
--WHERE is showing what you are looking for by Country with a exclusion of != " " and what you are excluding.

SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country != "USA";

--#2. Show only the Customers from Brazil.
--SELECT As you can see from the SELECT you are seaching FirstName, LastName, CustomerId, Country. 
--FROM is showing the data base along with customers each is distinguished with a "." between them to show the data base and then the folder you are searching. 
--WHERE is showing what you are looking for by Country with a = " " and what you are only looking for.

SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country = "Brazil" ;

--#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
--SELECT As you can see from the SELECT you are seaching FirstName, LastName, InvoiceID, InvoiceDate, BillingCountry. 
--FROM is showing the data base along with invoices each is distinguished with a "." between them to show the data base and then the folder with AS renaming invoices as inv. 
--LEFT JOIN giving you where to JOIN and then using the AS again to rename customers to cust. 
--ON is showing you connecting tables in the JOIN with inv.CustomerId=cust.CustomerId
--WHERE is showing what you are looking for by type with a location, ="Brazil" searches the column you give it for the values you type in.

SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM chinook.invoices AS inv 
LEFT JOIN chinook.customers AS cust 
ON inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = "Brazil";

--*OR*-- AS is not needed to rename each table.

SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM chinook.invoices inv 
LEFT JOIN chinook.customers cust 
ON inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = "Brazil";

--#4. Show the Employees who are Sales Agents.
--SELECT As you can see from the SELECT you are seaching * all information. 
--FROM is showing the data base along with employees each is distinguished with a "." between them to show the data base and then the folder you are searching. 
--WHERE is showing what you are looking for by Sales Support Agent with a = " " and what you are only looking for.
--** It should be noted that Sales Agent was what was asked for but I first had to look at the entire table to find the term Sales Support Agent.
------------
-- Part 1 --
------------
SELECT *
FROM chinook.employees

------------
-- Part 2 --
------------
SELECT * 
FROM chinook.employees
WHERE Title = "Sales Support Agent";

--#5. Find a unique/distinct list of billing countries from the Invoice table.
--SELECT As you can see from the SELECT you are seaching * all information. 
--FROM is showing the data base along with invoices each is distinguished with a "." between them to show the data base and then the folder you are searching. 
--It should be noted that Billing Countries is shown and when selecting BillingCountry you are shown all the countries but using DISTINCT condense the list so no redundancies are present.
------------
-- Part 1 --
------------
SELECT *
FROM chinook.invoices

------------
-- Part 2 --
------------
SELECT DISTINCT BillingCountry 
FROM chinook.Invoices;

--#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
--SELECT As you can see from the SELECT you are seaching FirstName, LastName, InvoiceID. 
--FROM is showing the data base along with Employees each is distinguished with a "." between them to show the data base and then the folder with AS renaming invoices as inv. 
--LEFT JOIN giving you where to JOIN and then using the AS again to rename customers to cust. 
--ON is showing you connecting tables in the JOIN with inv.CustomerId=cust.CustomerId
--WHERE is showing what you are looking for by type with a location, ="Brazil" searches the column you give it for the values you type in.

SELECT emp.Firstname, emp.LastName, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId;

--#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId;

--#8. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#9. What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--#10. Write a query that includes the purchased track name with each invoice line item.
SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId;

--#11. Write a query that includes the purchased track name AND artist name with each invoice line item.
SELECT t.Name, t.Composer, i.InvoiceLineId
FROM chinook.Invoice_items i 
JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId;

--#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
ON a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m 
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g 
ON g.GenreId = t.GenreId;

--#13. Show the total sales made by each sales agent.
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) AS 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

--#14. Which sales agent made the most in sales in 2009?
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) AS 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  
DESC LIMIT 1;
